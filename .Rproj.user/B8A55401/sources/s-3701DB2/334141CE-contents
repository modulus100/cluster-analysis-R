# clear everything
rm(list=ls())
library(class)
library(DMwR)
library(outliers)
library(CORElearn)
library(Rlof)
library(lattice)
library(doParallel)
library(foreach)
library(iterators)
library(parallel)
# load the data
load(file="/Users/aleksandrmadisson/Repository/DataMining/kNN_data1.Rdata")
#----------------------------
# find dimensions of the data
#datasize=dim(x)
#str(sigma1) 
#Now we need to obtain some numeric data from the Iris data set which can be obtained using the following commands
#iris2 <- iris[,1:2]
#head(iris2)

#outlier.scores <- lofactor(iris2, k=5)
#Now that you have computed the outlier scores you need to plot the density graph by typing the command. The density graph is shown below

#plot(density(outlier.scores))
#-------------------------------
#gen.xyz <- function(n, mean, sd) {
#  cbind(rnorm(n, mean[1], sd[1]),
#        rnorm(n, mean[2],sd[2]),
#        rnorm(n, mean[3],sd[3])
#  );
#}

#ArtifData <- rbind(gen.xyz(150, c(0,0,0), c(.2,.2,.2)),
#                   gen.xyz(150, c(2.5,0,1), c(.4,.2,.6)),
#                   gen.xyz(150, c(1.25,.5, .1), c(.3,.2, .5)));
#str(ArtifData)
#head(ArtifData)
#outlier.scores <- lofactor(ArtifData, k=5)
#plot(density(outlier.scores));
#___________________________________
#LOF distance based
outlier.distance <- lof(yy,k=5)
plot(outlier.distance,xlim=c(-10,100),ylim=c(0,10))
# pick out top 5 outliers

 outliers <- order(outlier.distance, decreasing=T)[1:5]
 # who are outliers
   print(outliers)
#
n <- nrow(yy)
 labels <- 1:n
 labels[-outliers] <- "*"
 biplot(prcomp(yy), cex=1.0, xlabs=labels)
# LOF density based
#str (xx)
#head(xx)
#outlier.scores <- lofactor(xx, k=5)
#plot(density(outlier.scores))